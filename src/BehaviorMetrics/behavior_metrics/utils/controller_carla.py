#!/usr/bin/env python

"""This module contains the controller of the application.

This application is based on a type of software architecture called Model View Controller. This is the controlling part
of this architecture (controller), which communicates the logical part (model) with the user interface (view).

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.
This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
"""

import shlex
import subprocess
import threading
import cv2
import rospy
import os
import time
import rosbag
import json
import math
import random
from utils.logger import logger
try:
    import carla
except ModuleNotFoundError as ex:
    logger.error('CARLA is not supported')
from std_srvs.srv import Empty
from sensor_msgs.msg import Image as msgImage
from cv_bridge import CvBridge
from datetime import datetime
from std_msgs.msg import String, Float32
from utils import metrics_carla
from utils.constants import CARLA_INFRACTION_PENALTIES
try:
    from carla_msgs.msg import CarlaLaneInvasionEvent
    from carla_msgs.msg import CarlaCollisionEvent
except ModuleNotFoundError as ex:
    logger.error('CARLA is not supported')
from PIL import Image
import numpy as np
import math

__author__ = 'sergiopaniego'
__contributors__ = []
__license__ = 'GPLv3'

INITIAL_POSITIONS = {
    'Carla/Maps/Town02_Opt': {
        'clockwise': carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=-179.999954, roll=-0.006836)
        ),
        'anticlockwise': carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=0.999954, roll=-0.006836)
        )
    },
    'Carla/Maps/Town10HD': {
        'clockwise': carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=-179.999954, roll=-0.006836)
        ),
        'anticlockwise': carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=0.999954, roll=-0.006836)
        )
    },
    'Carla/Maps/Town06': {
        'clockwise' : carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=-179.999954, roll=-0.006836)
        ),
        'anticlockwise': carla.Transform(
            carla.Location(x=180.999569, y=303.000885, z=1),
            carla.Rotation(pitch=0.06, yaw=0.999954, roll=-0.006836)
        )
    }
    # Add more circuits as needed
}

POINTS_PER_MAP = {
    'Carla/Maps/Town02_Opt': {
        'clockwise':
           [{'location': {'x': 181.01332092285156, 'y': 302.49774169921875, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 178.749267578125, 'roll': 0.0}},          {'location': {'x': 161.05384826660156, 'y': 302.52716064453125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.92127990722656, 'roll': 0.0}},          {'location': {'x': 141.05386352539062, 'y': 302.55462646484375, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.92127990722656, 'roll': 0.0}},          {'location': {'x': 121.05730438232422, 'y': 302.5545654296875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.01942443847656, 'roll': 0.0}},          {'location': {'x': 101.05730438232422, 'y': 302.5477600097656, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.01942443847656, 'roll': 0.0}},          {'location': {'x': 81.05730438232422, 'y': 302.5409851074219, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.01942443847656, 'roll': 0.0}},          {'location': {'x': 61.05730438232422, 'y': 302.5342102050781, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.01942443847656, 'roll': 0.0}},          {'location': {'x': 41.055267333984375, 'y': 302.53515625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -180.03903198242188, 'roll': 0.0}},          {'location': {'x': 21.055269241333008, 'y': 302.5487976074219, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.96095275878906, 'roll': 0.0}},          {'location': {'x': 1.594491720199585, 'y': 302.3045349121094, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 194.7761688232422, 'roll': 0.0}},          {'location': {'x': -3.3816475868225098, 'y': 287.3636474609375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.09098052978516, 'roll': 0.0}},          {'location': {'x': -3.413407802581787, 'y': 267.3636779785156, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.09098052978516, 'roll': 0.0}},          {'location': {'x': -3.440734386444092, 'y': 247.36642456054688, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01293182373047, 'roll': 0.0}},          {'location': {'x': -3.4452500343322754, 'y': 227.36642456054688, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01293182373047, 'roll': 0.0}},          {'location': {'x': -3.449765682220459, 'y': 207.36642456054688, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01293182373047, 'roll': 0.0}},          {'location': {'x': 0.4272531569004059, 'y': 191.67459106445312, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -13.926624298095703, 'roll': 0.0}},          {'location': {'x': 19.930631637573242, 'y': 191.56138610839844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}},          {'location': {'x': 38.929359436035156, 'y': 192.07168579101562, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 26.47684669494629, 'roll': 0.0}},          {'location': {'x': 41.85167694091797, 'y': 208.76499938964844, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.99503326416016, 'roll': 0.0}},          {'location': {'x': 41.90330123901367, 'y': 228.9360809326172, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 85.05287170410156, 'roll': 0.0}},          {'location': {'x': 58.411155700683594, 'y': 240.8790283203125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 78.41114807128906, 'y': 240.89117431640625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 98.41114044189453, 'y': 240.9033203125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 118.41114044189453, 'y': 240.91546630859375, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 138.4111328125, 'y': 240.9276123046875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.96514892578125, 'roll': 0.0}},          {'location': {'x': 158.4111328125, 'y': 240.93975830078125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 178.4111328125, 'y': 240.951904296875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}},          {'location': {'x': 193.69517517089844, 'y': 229.41815185546875, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01294708251953, 'roll': 0.0}},          {'location': {'x': 193.69065856933594, 'y': 209.41815185546875, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01294708251953, 'roll': 0.0}},          {'location': {'x': 189.16549682617188, 'y': 188.97874450683594, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -148.71475219726562, 'roll': 0.0}},          {'location': {'x': 168.32078552246094, 'y': 187.62939453125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 148.32078552246094, 'y': 187.62022399902344, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 128.32078552246094, 'y': 187.61105346679688, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 108.32078552246094, 'y': 187.60189819335938, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 88.32078552246094, 'y': 187.5927276611328, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 68.32079315185547, 'y': 187.58355712890625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.02626037597656, 'roll': 0.0}},          {'location': {'x': 47.657344818115234, 'y': 188.1053009033203, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 159.1720428466797, 'roll': 0.0}}],
        'anticlockwise':
            [{'location': {'x': 181.01332092285156, 'y': 302.49774169921875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 178.749267578125, 'roll': 0.0}}, {'location': {'x': 189.67263793945312, 'y': 290.70806884765625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.03919219970703, 'roll': 0.0}}, {'location': {'x': 189.6863250732422, 'y': 270.70806884765625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.03919219970703, 'roll': 0.0}}, {'location': {'x': 189.699951171875, 'y': 250.70904541015625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.01191711425781, 'roll': 0.0}}, {'location': {'x': 180.22496032714844, 'y': 240.9530029296875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 160.22496032714844, 'y': 240.94085693359375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 140.22496032714844, 'y': 240.9287109375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.96514892578125, 'roll': 0.0}}, {'location': {'x': 120.2249755859375, 'y': 240.91656494140625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 100.2249755859375, 'y': 240.9044189453125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 80.22498321533203, 'y': 240.89227294921875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 60.22498321533203, 'y': 240.880126953125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.0348052978515625, 'roll': 0.0}}, {'location': {'x': 42.254730224609375, 'y': 231.03628540039062, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 75.94843292236328, 'roll': 0.0}}, {'location': {'x': 41.851837158203125, 'y': 210.57884216308594, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.99503326416016, 'roll': 0.0}}, {'location': {'x': 39.98554229736328, 'y': 192.78753662109375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 41.77839279174805, 'roll': 0.0}}, {'location': {'x': 21.744462966918945, 'y': 191.5622100830078, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 1.7442281246185303, 'y': 191.55303955078125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.026275634765625, 'roll': 0.0}}, {'location': {'x': -7.457216739654541, 'y': 174.36737060546875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.98706817626953, 'roll': 0.0}}, {'location': {'x': -7.442744255065918, 'y': 154.3624267578125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.12882232666016, 'roll': 0.0}}, {'location': {'x': -7.397780418395996, 'y': 134.3624725341797, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.12882232666016, 'roll': 0.0}}, {'location': {'x': -6.990563869476318, 'y': 113.8618392944336, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 105.4183120727539, 'roll': 0.0}}, {'location': {'x': 11.949051856994629, 'y': 105.524169921875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.79315185546875, 'roll': 0.0}}, {'location': {'x': 31.94892120361328, 'y': 105.45197296142578, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.79315185546875, 'roll': 0.0}}, {'location': {'x': 51.957401275634766, 'y': 105.39192962646484, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96102905273438, 'roll': 0.0}}, {'location': {'x': 71.95738983154297, 'y': 105.40553283691406, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96102905273438, 'roll': 0.0}}, {'location': {'x': 91.95738220214844, 'y': 105.41913604736328, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96102905273438, 'roll': 0.0}}, {'location': {'x': 111.95738220214844, 'y': 105.4327392578125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96102905273438, 'roll': 0.0}}, {'location': {'x': 131.95738220214844, 'y': 105.44634246826172, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96102905273438, 'roll': 0.0}}, {'location': {'x': 151.95465087890625, 'y': 105.4400634765625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.96107482910156, 'roll': 0.0}}, {'location': {'x': 171.95465087890625, 'y': 105.42648315429688, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.96107482910156, 'roll': 0.0}}, {'location': {'x': 191.97186279296875, 'y': 111.19475555419922, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 238.37257385253906, 'roll': 0.0}}, {'location': {'x': 193.72109985351562, 'y': 131.97303771972656, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.92216491699219, 'roll': 0.0}}, {'location': {'x': 193.69393920898438, 'y': 151.9730224609375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.92216491699219, 'roll': 0.0}}, {'location': {'x': 193.68218994140625, 'y': 171.96983337402344, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01294708251953, 'roll': 0.0}}, {'location': {'x': 187.55264282226562, 'y': 191.43910217285156, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -371.2395935058594, 'roll': 0.0}}, {'location': {'x': 167.17236328125, 'y': 191.6288604736328, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 147.17237854003906, 'y': 191.61968994140625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 127.17237091064453, 'y': 191.61053466796875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 107.17237091064453, 'y': 191.6013641357422, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 87.17237091064453, 'y': 191.5922088623047, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 67.17237091064453, 'y': 191.58303833007812, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.02626265585422516, 'roll': 0.0}}, {'location': {'x': 48.32099151611328, 'y': 192.10916137695312, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -30.17696189880371, 'roll': 0.0}}, {'location': {'x': 45.851715087890625, 'y': 209.19776916503906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.00496673583984, 'roll': 0.0}}, {'location': {'x': 45.853450775146484, 'y': 229.19776916503906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -450.00494384765625, 'roll': 0.0}}, {'location': {'x': 56.926795959472656, 'y': 236.8781280517578, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 76.92678833007812, 'y': 236.89027404785156, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 96.9267807006836, 'y': 236.9024200439453, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 116.9267807006836, 'y': 236.91455078125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 136.92678833007812, 'y': 236.9267120361328, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -539.9651489257812, 'roll': 0.0}}, {'location': {'x': 156.92678833007812, 'y': 236.9388427734375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 176.92678833007812, 'y': 236.95098876953125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.96519470214844, 'roll': 0.0}}, {'location': {'x': 193.69920349121094, 'y': 247.18284606933594, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.01294708251953, 'roll': 0.0}}, {'location': {'x': 193.68873596191406, 'y': 267.1846618652344, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.96080780029297, 'roll': 0.0}}, {'location': {'x': 193.67506408691406, 'y': 287.1846618652344, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.96080780029297, 'roll': 0.0}}, {'location': {'x': 185.15731811523438, 'y': 305.7837219238281, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 341.31158447265625, 'roll': 0.0}}, {'location': {'x': 164.58547973632812, 'y': 306.5223083496094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.07871776074171066, 'roll': 0.0}}, {'location': {'x': 144.58551025390625, 'y': 306.5498046875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.07871776074171066, 'roll': 0.0}}, {'location': {'x': 124.58209228515625, 'y': 306.5557556152344, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.01941712014377117, 'roll': 0.0}}, {'location': {'x': 104.58209228515625, 'y': 306.5489807128906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.01941712014377117, 'roll': 0.0}}, {'location': {'x': 84.58209228515625, 'y': 306.54217529296875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.01941712014377117, 'roll': 0.0}}, {'location': {'x': 64.58209228515625, 'y': 306.535400390625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.01941712014377117, 'roll': 0.0}}, {'location': {'x': 43.557472229003906, 'y': 303.9898986816406, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 52.221412658691406, 'roll': 0.0}}, {'location': {'x': 41.85812759399414, 'y': 283.050048828125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.99503326416016, 'roll': 0.0}}, {'location': {'x': 41.85639190673828, 'y': 263.050048828125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.99503326416016, 'roll': 0.0}}, {'location': {'x': 41.85465621948242, 'y': 243.050048828125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.99503326416016, 'roll': 0.0}}]
   },
    'Carla/Maps/Town06': {
        'clockwise': [ {'location': {'x': 181.01710510253906, 'y': 251.58737182617188, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 201.01710510253906, 'y': 251.5941925048828, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 221.01710510253906, 'y': 251.60101318359375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 241.01710510253906, 'y': 251.6078338623047, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 261.01708984375, 'y': 251.61465454101562, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 281.01708984375, 'y': 251.62147521972656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 301.01708984375, 'y': 251.62831115722656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 321.01708984375, 'y': 251.6351318359375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 341.0170593261719, 'y': 251.64195251464844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 361.0170593261719, 'y': 251.64877319335938, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 381.0170593261719, 'y': 251.6555938720703, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 401.01708984375, 'y': 251.66241455078125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 421.01708984375, 'y': 251.6692352294922, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 441.01708984375, 'y': 251.6760711669922, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 461.0170593261719, 'y': 251.68289184570312, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 481.0170593261719, 'y': 251.68971252441406, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 501.0170593261719, 'y': 251.696533203125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 521.01708984375, 'y': 251.70335388183594, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 541.01708984375, 'y': 251.71017456054688, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 561.01708984375, 'y': 251.7169952392578, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 581.01708984375, 'y': 251.7238311767578, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 601.27294921875, 'y': 251.7080078125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -1.1779546737670898, 'roll': 0.0}}, {'location': {'x': 623.7069702148438, 'y': 248.78729248046875, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -13.65749740600586, 'roll': 0.0}}, {'location': {'x': 644.9798583984375, 'y': 241.08775329589844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -26.137041091918945, 'roll': 0.0}}, {'location': {'x': 664.636962890625, 'y': 223.1511993408203, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -58.77001953125, 'roll': 0.0}}, {'location': {'x': 671.4813232421875, 'y': 197.86082458496094, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.37858581542969, 'roll': 0.0}}, {'location': {'x': 671.6982421875, 'y': 177.86154174804688, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 671.9151611328125, 'y': 157.8627166748047, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 672.132080078125, 'y': 137.8638916015625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 672.3489379882812, 'y': 117.86505889892578, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 672.5658569335938, 'y': 97.86624145507812, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 672.7827758789062, 'y': 77.86741638183594, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.62139892578125, 'roll': 0.0}}, {'location': {'x': 672.6138916015625, 'y': 57.00111389160156, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 266.5399475097656, 'roll': 0.0}}, {'location': {'x': 669.8013916015625, 'y': 35.495384216308594, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 258.55877685546875, 'roll': 0.0}}, {'location': {'x': 664.0302124023438, 'y': 14.588459014892578, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 250.57760620117188, 'roll': 0.0}}, {'location': {'x': 651.7012329101562, 'y': -6.960171222686768, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 227.0525360107422, 'roll': 0.0}}, {'location': {'x': 630.115234375, 'y': -20.986661911010742, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 198.9786834716797, 'roll': 0.0}}, {'location': {'x': 606.4669799804688, 'y': -23.919649124145508, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.41941833496094, 'roll': 0.0}}, {'location': {'x': 586.467529296875, 'y': -24.06605339050293, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.58056640625, 'roll': 0.0}}, {'location': {'x': 566.4680786132812, 'y': -24.21245574951172, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.58056640625, 'roll': 0.0}}, {'location': {'x': 546.4056396484375, 'y': -24.345693588256836, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.8748779296875, 'roll': 0.0}}, {'location': {'x': 526.4056396484375, 'y': -24.389362335205078, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.8748779296875, 'roll': 0.0}}, {'location': {'x': 506.40570068359375, 'y': -24.433032989501953, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.8748779296875, 'roll': 0.0}}, {'location': {'x': 486.40576171875, 'y': -24.476701736450195, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.8748779296875, 'roll': 0.0}}, {'location': {'x': 466.40582275390625, 'y': -24.52037239074707, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.8748779296875, 'roll': 0.0}}, {'location': {'x': 446.3643493652344, 'y': -24.561180114746094, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -180.06924438476562, 'roll': 0.0}}, {'location': {'x': 426.3346252441406, 'y': -24.489749908447266, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 406.3347473144531, 'y': -24.41690444946289, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 386.33489990234375, 'y': -24.344058990478516, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 366.33502197265625, 'y': -24.271215438842773, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 346.33514404296875, 'y': -24.19837188720703, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 326.3352966308594, 'y': -24.125526428222656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 306.33544921875, 'y': -24.052682876586914, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 286.3355712890625, 'y': -23.97983741760254, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 266.335693359375, 'y': -23.906993865966797, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 246.33584594726562, 'y': -23.834148406982422, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 226.33596801757812, 'y': -23.761302947998047, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 206.3361053466797, 'y': -23.688459396362305, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 186.33624267578125, 'y': -23.615615844726562, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 166.33636474609375, 'y': -23.542770385742188, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 146.33648681640625, 'y': -23.469924926757812, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 126.33662414550781, 'y': -23.397079467773438, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 106.33675384521484, 'y': -23.324234008789062, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 86.33688354492188, 'y': -23.25139045715332, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 66.33702087402344, 'y': -23.178546905517578, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 46.33715057373047, 'y': -23.105701446533203, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 26.3372859954834, 'y': -23.032855987548828, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': 10.151309967041016, 'y': -27.720903396606445, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -112.74484252929688, 'roll': 0.0}}, {'location': {'x': 9.779897689819336, 'y': -46.95023727416992, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 9.913345336914062, 'y': -66.94979095458984, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 10.046794891357422, 'y': -86.94934844970703, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 10.276938438415527, 'y': -106.6629409790039, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -87.75643920898438, 'roll': 0.0}}, {'location': {'x': 14.087690353393555, 'y': -123.95154571533203, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -73.25007629394531, 'roll': 0.0}}, {'location': {'x': 14.501405715942383, 'y': -144.58480834960938, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -121.717041015625, 'roll': 0.0}}, {'location': {'x': -5.01180362701416, 'y': -151.4821319580078, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 161.0759735107422, 'roll': 0.0}}, {'location': {'x': -16.401058197021484, 'y': -134.16470336914062, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 85.58792114257812, 'roll': 0.0}}, {'location': {'x': -12.346339225769043, 'y': -114.4681625366211, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 81.7371826171875, 'roll': 0.0}}, {'location': {'x': -11.901618957519531, 'y': -94.75387573242188, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -12.03506851196289, 'y': -74.75431823730469, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -12.168516159057617, 'y': -54.75476837158203, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -12.30196475982666, 'y': -34.75521469116211, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -21.175256729125977, 'y': -22.859804153442383, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -41.175506591796875, 'y': -22.786958694458008, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -61.17536926269531, 'y': -22.714115142822266, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -81.17523956298828, 'y': -22.64126968383789, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -101.17510986328125, 'y': -22.568424224853516, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -121.17497253417969, 'y': -22.49557876586914, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -141.1748504638672, 'y': -22.4227352142334, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -161.17471313476562, 'y': -22.349891662597656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -181.17457580566406, 'y': -22.27704620361328, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.7913055419922, 'roll': 0.0}}, {'location': {'x': -201.17445373535156, 'y': -22.204200744628906, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.79132080078125, 'roll': 0.0}}, {'location': {'x': -221.17080688476562, 'y': -22.212583541870117, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.90692138671875, 'roll': 0.0}}, {'location': {'x': -241.1834716796875, 'y': -22.04541778564453, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 179.48190307617188, 'roll': 0.0}}, {'location': {'x': -261.2293395996094, 'y': -21.813844680786133, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 177.923095703125, 'roll': 0.0}}, {'location': {'x': -281.347412109375, 'y': -19.575939178466797, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 169.38211059570312, 'roll': 0.0}}, {'location': {'x': -300.909912109375, 'y': -14.37500286102295, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 160.84112548828125, 'roll': 0.0}}, {'location': {'x': -319.4831237792969, 'y': -6.326372146606445, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 152.30014038085938, 'roll': 0.0}}, {'location': {'x': -336.64208984375, 'y': 4.3494462966918945, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 144.90008544921875, 'roll': 0.0}}, {'location': {'x': -352.09234619140625, 'y': 17.594667434692383, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 131.5033416748047, 'roll': 0.0}}, {'location': {'x': -363.31475830078125, 'y': 34.66670608520508, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 115.13504028320312, 'roll': 0.0}}, {'location': {'x': -369.2712707519531, 'y': 54.20941162109375, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 98.7667465209961, 'roll': 0.0}}, {'location': {'x': -370.3137512207031, 'y': 74.39646911621094, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 91.17143249511719, 'roll': 0.0}}, {'location': {'x': -370.7059326171875, 'y': 94.40699005126953, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 450.699951171875, 'roll': 0.0}}, {'location': {'x': -370.5911865234375, 'y': 114.45342254638672, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.14167785644531, 'roll': 0.0}}, {'location': {'x': -370.2915954589844, 'y': 134.451171875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.14167785644531, 'roll': 0.0}}, {'location': {'x': -369.99200439453125, 'y': 154.44894409179688, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.14167785644531, 'roll': 0.0}}, {'location': {'x': -369.6923828125, 'y': 174.44668579101562, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.14167785644531, 'roll': 0.0}}, {'location': {'x': -369.3927917480469, 'y': 194.44444274902344, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.14167785644531, 'roll': 0.0}}, {'location': {'x': -367.3905334472656, 'y': 214.74183654785156, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 433.3907470703125, 'roll': 0.0}}, {'location': {'x': -357.1452331542969, 'y': 232.638916015625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 407.0306701660156, 'roll': 0.0}}, {'location': {'x': -340.0597839355469, 'y': 244.1220245361328, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 21.97093963623047, 'roll': 0.0}}, {'location': {'x': -317.7245788574219, 'y': 249.9932403564453, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 7.152055263519287, 'roll': 0.0}}, {'location': {'x': -296.2068786621094, 'y': 250.78277587890625, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -276.2069091796875, 'y': 250.74679565429688, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -256.2069396972656, 'y': 250.7108154296875, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -236.2069854736328, 'y': 250.67481994628906, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -216.20703125, 'y': 250.6388397216797, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -196.20706176757812, 'y': 250.6028594970703, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -176.20709228515625, 'y': 250.56687927246094, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -156.20712280273438, 'y': 250.53089904785156, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.10308279097080231, 'roll': 0.0}}, {'location': {'x': -136.18673706054688, 'y': 250.46226501464844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -116.18685150146484, 'y': 250.392822265625, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -96.18697357177734, 'y': 250.32339477539062, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -76.18709564208984, 'y': 250.25396728515625, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -56.18722152709961, 'y': 250.1845245361328, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -36.187339782714844, 'y': 250.11508178710938, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -16.18745994567871, 'y': 250.04563903808594, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -0.19892166554927826, 'roll': 0.0}}, {'location': {'x': -9.441421508789062, 'y': 262.8674011230469, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -270.9037780761719, 'roll': 0.0}}, {'location': {'x': -9.125947952270508, 'y': 282.86492919921875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -8.904545783996582, 'y': 302.68487548828125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.20118713378906, 'roll': 0.0}}, {'location': {'x': -9.102336883544922, 'y': 322.6189880371094, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.60321044921875, 'roll': 0.0}}, {'location': {'x': -9.312891960144043, 'y': 342.61785888671875, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.60321044921875, 'roll': 0.0}}, {'location': {'x': -10.316596031188965, 'y': 362.4660949707031, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 94.32821655273438, 'roll': 0.0}}, {'location': {'x': -14.411600112915039, 'y': 381.4922790527344, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 109.96467590332031, 'roll': 0.0}}, {'location': {'x': -16.25929832458496, 'y': 401.9967346191406, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 65.10665130615234, 'roll': 0.0}}, {'location': {'x': 1.3293812274932861, 'y': 413.20587158203125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -1.8416810035705566, 'roll': 0.0}}, {'location': {'x': 17.961387634277344, 'y': 400.71075439453125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -69.39497375488281, 'roll': 0.0}}, {'location': {'x': 16.39168930053711, 'y': 380.1836853027344, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 256.85906982421875, 'roll': 0.0}}, {'location': {'x': 13.358766555786133, 'y': 360.6607666015625, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -95.71395874023438, 'roll': 0.0}}, {'location': {'x': 12.706541061401367, 'y': 340.8878479003906, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 12.917095184326172, 'y': 320.8889465332031, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 13.098448753356934, 'y': 300.7503662109375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.02361297607422, 'roll': 0.0}}, {'location': {'x': 12.840372085571289, 'y': 280.5563659667969, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 12.524896621704102, 'y': 260.5588073730469, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 23.45745086669922, 'y': 251.5336151123047, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 43.45744705200195, 'y': 251.54043579101562, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 63.45744323730469, 'y': 251.54725646972656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 83.45744323730469, 'y': 251.55409240722656, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 103.45744323730469, 'y': 251.5609130859375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 123.45744323730469, 'y': 251.56773376464844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 143.45745849609375, 'y': 251.57455444335938, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 163.4574432373047, 'y': 251.5813751220703, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}],
        'anticlockwise': [{'location': {'x': 181.01710510253906, 'y': 251.58737182617188, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 161.01710510253906, 'y': 251.58055114746094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 141.01710510253906, 'y': 251.57371520996094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 121.01709747314453, 'y': 251.56690979003906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 101.01709747314453, 'y': 251.56007385253906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 81.01709747314453, 'y': 251.55325317382812, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 61.01710510253906, 'y': 251.5464324951172, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 41.01710510253906, 'y': 251.53961181640625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 21.016773223876953, 'y': 251.5327911376953, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.019545903429389, 'roll': 0.0}}, {'location': {'x': 12.563390731811523, 'y': 262.9988708496094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 12.878865242004395, 'y': 282.99639892578125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 13.093347549438477, 'y': 303.2529296875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.74396514892578, 'roll': 0.0}}, {'location': {'x': 12.89140510559082, 'y': 323.32916259765625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 12.6808500289917, 'y': 343.3280334472656, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 13.601847648620605, 'y': 363.0901184082031, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -95.71395874023438, 'roll': 0.0}}, {'location': {'x': 16.96102523803711, 'y': 382.5227966308594, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 255.7816619873047, 'roll': 0.0}}, {'location': {'x': 16.859758377075195, 'y': 403.1417236328125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -61.84813690185547, 'roll': 0.0}}, {'location': {'x': -1.377406358718872, 'y': 413.08245849609375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 7.06318998336792, 'roll': 0.0}}, {'location': {'x': -17.21398162841797, 'y': 399.48419189453125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 73.28292083740234, 'roll': 0.0}}, {'location': {'x': -13.635682106018066, 'y': 379.2402648925781, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 108.05675506591797, 'roll': 0.0}}, {'location': {'x': -10.176337242126465, 'y': 360.0871276855469, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 92.45773315429688, 'roll': 0.0}}, {'location': {'x': -9.287200927734375, 'y': 340.17767333984375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.60321044921875, 'roll': 0.0}}, {'location': {'x': -9.07664680480957, 'y': 320.17877197265625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.60321044921875, 'roll': 0.0}}, {'location': {'x': -8.901968955993652, 'y': 300.28973388671875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.92154693603516, 'roll': 0.0}}, {'location': {'x': -9.164441108703613, 'y': 280.4248962402344, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -9.479915618896484, 'y': 260.4273681640625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -9.795390129089355, 'y': 240.4298095703125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -10.110864639282227, 'y': 220.4323272705078, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -10.401077270507812, 'y': 200.37371826171875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.47254943847656, 'roll': 0.0}}, {'location': {'x': -10.58519172668457, 'y': 180.3745574951172, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.47254943847656, 'roll': 0.0}}, {'location': {'x': -10.771340370178223, 'y': 160.40350341796875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.29861450195312, 'roll': 0.0}}, {'location': {'x': -9.264681816101074, 'y': 140.21456909179688, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 100.47428894042969, 'roll': 0.0}}, {'location': {'x': -8.835697174072266, 'y': 120.59837341308594, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 88.39561462402344, 'roll': 0.0}}, {'location': {'x': -9.104217529296875, 'y': 100.48918914794922, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 89.50514221191406, 'roll': 0.0}}, {'location': {'x': -9.27695083618164, 'y': 80.48993682861328, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 89.50514221191406, 'roll': 0.0}}, {'location': {'x': -9.427946090698242, 'y': 60.40362548828125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -269.95635986328125, 'roll': 0.0}}, {'location': {'x': -9.303028106689453, 'y': 40.3493537902832, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -269.61767578125, 'roll': 0.0}}, {'location': {'x': -9.16957950592041, 'y': 20.349796295166016, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -9.036130905151367, 'y': 0.35024493932724, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -8.902682304382324, 'y': -19.64931297302246, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -8.769233703613281, 'y': -39.64886474609375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -8.635785102844238, 'y': -59.64842224121094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -8.502336502075195, 'y': -79.6479721069336, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -8.368887901306152, 'y': -99.64759063720703, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 90.38229370117188, 'roll': 0.0}}, {'location': {'x': -9.848182678222656, 'y': -119.92061614990234, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 77.57537078857422, 'roll': 0.0}}, {'location': {'x': -12.543914794921875, 'y': -138.74960327148438, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 104.14708709716797, 'roll': 0.0}}, {'location': {'x': 0.3933430314064026, 'y': -148.8969268798828, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.63514709472656, 'roll': 0.0}}, {'location': {'x': 13.149984359741211, 'y': -138.75045776367188, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -102.5804672241211, 'roll': 0.0}}, {'location': {'x': 9.319091796875, 'y': -120.251708984375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -73.25007629394531, 'roll': 0.0}}, {'location': {'x': 6.652392387390137, 'y': -102.01660919189453, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -89.19647216796875, 'roll': 0.0}}, {'location': {'x': 6.514063835144043, 'y': -82.05569458007812, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 6.380615234375, 'y': -62.0561408996582, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 6.247166633605957, 'y': -42.05658721923828, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 6.113718032836914, 'y': -22.057031631469727, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 5.980269432067871, 'y': -2.057478189468384, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 5.846820831298828, 'y': 17.94207763671875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 270.3822937011719, 'roll': 0.0}}, {'location': {'x': 5.713372230529785, 'y': 37.94163513183594, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -89.61767578125, 'roll': 0.0}}, {'location': {'x': 5.580134391784668, 'y': 57.936038970947266, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -89.66897583007812, 'roll': 0.0}}, {'location': {'x': 5.700830936431885, 'y': 77.85261535644531, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 269.505126953125, 'roll': 0.0}}, {'location': {'x': 5.87356424331665, 'y': 97.85187530517578, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 269.505126953125, 'roll': 0.0}}, {'location': {'x': 6.095670700073242, 'y': 117.71774291992188, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -91.31700897216797, 'roll': 0.0}}, {'location': {'x': 6.937475204467773, 'y': 137.3835906982422, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -93.26763153076172, 'roll': 0.0}}, {'location': {'x': 7.691590309143066, 'y': 157.73828125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.97579956054688, 'roll': 0.0}}, {'location': {'x': 7.8919782638549805, 'y': 177.8096160888672, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.52745056152344, 'roll': 0.0}}, {'location': {'x': 8.076093673706055, 'y': 197.80877685546875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.52745056152344, 'roll': 0.0}}, {'location': {'x': 8.34906005859375, 'y': 217.74606323242188, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 8.664535522460938, 'y': 237.74356079101562, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 8.980009078979492, 'y': 257.7410888671875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 9.295483589172363, 'y': 277.7386169433594, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.90380096435547, 'roll': 0.0}}, {'location': {'x': 9.588813781738281, 'y': 297.8253479003906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -90.35287475585938, 'roll': 0.0}}, {'location': {'x': 9.447540283203125, 'y': 317.9789123535156, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 9.236985206604004, 'y': 337.9778137207031, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.39678955078125, 'roll': 0.0}}, {'location': {'x': 9.590082168579102, 'y': 358.1501770019531, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -455.71392822265625, 'roll': 0.0}}, {'location': {'x': 12.352743148803711, 'y': 378.1365051269531, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 258.1275939941406, 'roll': 0.0}}, {'location': {'x': 15.408821105957031, 'y': 396.9824523925781, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -78.28077697753906, 'roll': 0.0}}, {'location': {'x': 3.7469520568847656, 'y': 409.39324951171875, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -12.3264741897583, 'roll': 0.0}}, {'location': {'x': -11.807783126831055, 'y': 402.7611389160156, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 55.479736328125, 'roll': 0.0}}, {'location': {'x': -12.180376052856445, 'y': 385.43206787109375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 112.21110534667969, 'roll': 0.0}}, {'location': {'x': -7.106051921844482, 'y': 365.6586608886719, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 96.57463836669922, 'roll': 0.0}}, {'location': {'x': -5.843335151672363, 'y': 345.52789306640625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -269.39678955078125, 'roll': 0.0}}, {'location': {'x': -5.6327805519104, 'y': 325.52899169921875, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.60321044921875, 'roll': 0.0}}, {'location': {'x': -5.422697067260742, 'y': 305.5373840332031, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.53044891357422, 'roll': 0.0}}, {'location': {'x': -5.58105993270874, 'y': 285.68267822265625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -5.896533966064453, 'y': 265.6851501464844, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -6.212008476257324, 'y': 245.68760681152344, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -6.527482986450195, 'y': 225.6901092529297, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.09619903564453, 'roll': 0.0}}, {'location': {'x': -6.842933654785156, 'y': 205.6892547607422, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 449.1294250488281, 'roll': 0.0}}, {'location': {'x': -7.03642463684082, 'y': 185.65577697753906, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.47254943847656, 'roll': 0.0}}, {'location': {'x': -7.220539093017578, 'y': 165.6566162109375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 89.47254943847656, 'roll': 0.0}}, {'location': {'x': -7.662441253662109, 'y': 145.8489990234375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 87.61568450927734, 'roll': 0.0}}]
      },
    'Carla/Maps/Town10HD': {
        'clockwise':
            [{'location': {'x': 86.12206268310547, 'y': 135.372802734375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -30.75467300415039, 'roll': 0.0}}, {'location': {'x': 101.69976806640625, 'y': 119.30815887451172, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -59.33835983276367, 'roll': 0.0}}, {'location': {'x': 108.82305908203125, 'y': 98.4915771484375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -82.88043212890625, 'roll': 0.0}}, {'location': {'x': 109.33499145507812, 'y': 77.892578125, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -449.6092224121094, 'roll': 0.0}}, {'location': {'x': 109.47138977050781, 'y': 57.893043518066406, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -449.6092224121094, 'roll': 0.0}}, {'location': {'x': 109.6077880859375, 'y': 37.89350891113281, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.6092529296875, 'roll': 0.0}}, {'location': {'x': 109.74417877197266, 'y': 17.893972396850586, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.6092529296875, 'roll': 0.0}}, {'location': {'x': 109.88057708740234, 'y': -2.1055612564086914, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.6092529296875, 'roll': 0.0}}, {'location': {'x': 109.9718017578125, 'y': -22.06999969482422, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 270.779296875, 'roll': 0.0}}, {'location': {'x': 104.95696258544922, 'y': -43.847347259521484, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -117.44700622558594, 'roll': 0.0}}, {'location': {'x': 89.95840454101562, 'y': -60.514007568359375, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -146.5219268798828, 'roll': 0.0}}, {'location': {'x': 68.75068664550781, 'y': -67.79183959960938, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -175.59683227539062, 'roll': 0.0}}, {'location': {'x': 48.34845733642578, 'y': -67.9167251586914, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.97657775878906, 'roll': 0.0}}, {'location': {'x': 28.34845542907715, 'y': -67.90855407714844, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.97657775878906, 'roll': 0.0}}, {'location': {'x': 8.34846019744873, 'y': -67.90038299560547, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 179.97657775878906, 'roll': 0.0}}, {'location': {'x': -11.594415664672852, 'y': -68.11563873291016, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.59674072265625, 'roll': 0.0}}, {'location': {'x': -31.593332290649414, 'y': -68.32392883300781, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -179.40325927734375, 'roll': 0.0}}, {'location': {'x': -51.592247009277344, 'y': -68.5322265625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -179.40325927734375, 'roll': 0.0}}, {'location': {'x': -71.76483917236328, 'y': -68.72042846679688, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 178.70098876953125, 'roll': 0.0}}, {'location': {'x': -93.38449096679688, 'y': -61.789215087890625, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 145.74755859375, 'roll': 0.0}}, {'location': {'x': -107.92415618896484, 'y': -44.75082778930664, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 116.98052978515625, 'roll': 0.0}}, {'location': {'x': -113.46452331542969, 'y': -23.34680938720703, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 92.04415893554688, 'roll': 0.0}}, {'location': {'x': -113.7054672241211, 'y': -3.2199134826660156, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -113.92964935302734, 'y': 16.778831481933594, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -114.15382385253906, 'y': 36.7775764465332, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -114.37799835205078, 'y': 56.77631759643555, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -114.59477233886719, 'y': 76.8521957397461, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 449.80084228515625, 'roll': 0.0}}, {'location': {'x': -111.5401382446289, 'y': 98.0307846069336, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 433.7845764160156, 'roll': 0.0}}, {'location': {'x': -102.76068115234375, 'y': 117.54448699951172, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 417.76824951171875, 'roll': 0.0}}, {'location': {'x': -87.12371063232422, 'y': 133.28421020507812, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 31.67333984375, 'roll': 0.0}}, {'location': {'x': -65.93357849121094, 'y': 140.1871795654297, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 4.414215087890625, 'roll': 0.0}}, {'location': {'x': -45.56529235839844, 'y': 140.43115234375, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.64788818359375, 'roll': 0.0}}, {'location': {'x': -25.565670013427734, 'y': 140.5540771484375, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.3521270751953125, 'roll': 0.0}}, {'location': {'x': -5.566047668457031, 'y': 140.677001953125, 'z': 1.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.3521270751953125, 'roll': 0.0}}, {'location': {'x': 14.39871883392334, 'y': 140.9202117919922, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.7171252965927124, 'roll': 0.0}}, {'location': {'x': 34.43466567993164, 'y': 141.0443878173828, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 54.43435287475586, 'y': 141.15625, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 75.72279357910156, 'y': 139.77456665039062, 'z': 1.0}, 'rotation': {'pitch': 0.0, 'yaw': -15.128620147705078, 'roll': 0.0}}],
        'anticlockwise':
            [{'location': {'x': 86.12206268310547, 'y': 135.372802734375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -30.75467300415039, 'roll': 0.0}}, {'location': {'x': 64.3299331665039, 'y': 141.2115936279297, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 44.33024597167969, 'y': 141.0997314453125, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 24.33055877685547, 'y': 140.98788452148438, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 4.298017501831055, 'y': 140.74647521972656, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.6949329972267151, 'roll': 0.0}}, {'location': {'x': -15.670122146606445, 'y': 140.61489868164062, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.3521270751953125, 'roll': 0.0}}, {'location': {'x': -35.669742584228516, 'y': 140.49197387695312, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.64788818359375, 'roll': 0.0}}, {'location': {'x': -55.66936492919922, 'y': 140.36907958984375, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.64788818359375, 'roll': 0.0}}, {'location': {'x': -77.05258178710938, 'y': 137.96539306640625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 18.185882568359375, 'roll': 0.0}}, {'location': {'x': -95.99026489257812, 'y': 126.21646118164062, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 45.44499206542969, 'roll': 0.0}}, {'location': {'x': -107.87921905517578, 'y': 107.99281311035156, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 425.85992431640625, 'roll': 0.0}}, {'location': {'x': -113.8245849609375, 'y': 87.4376220703125, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 441.876220703125, 'roll': 0.0}}, {'location': {'x': -114.48892211914062, 'y': 66.67143249511719, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -114.26473999023438, 'y': 46.67268753051758, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -112.11906433105469, 'y': 26.18379020690918, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 117.10800170898438, 'roll': 0.0}}, {'location': {'x': -93.93754577636719, 'y': 16.422983169555664, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -179.84078979492188, 'roll': 0.0}}, {'location': {'x': -73.9376220703125, 'y': 16.47855567932129, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': -53.93769454956055, 'y': 16.53412628173828, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': -33.93777084350586, 'y': 16.589696884155273, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': -13.937848091125488, 'y': 16.645265579223633, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': 6.062074184417725, 'y': 16.700836181640625, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': 26.06199836730957, 'y': 16.756406784057617, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': 46.06192398071289, 'y': 16.811975479125977, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -179.84078979492188, 'roll': 0.0}}, {'location': {'x': 66.06183624267578, 'y': 16.86754608154297, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 180.15919494628906, 'roll': 0.0}}, {'location': {'x': 86.06192016601562, 'y': 16.923118591308594, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -179.84078979492188, 'roll': 0.0}}, {'location': {'x': 104.10588073730469, 'y': 26.488126754760742, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -115.46368408203125, 'roll': 0.0}}, {'location': {'x': 106.04576110839844, 'y': 46.97698974609375, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.6092529296875, 'roll': 0.0}}, {'location': {'x': 105.90936279296875, 'y': 66.97652435302734, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -449.6092224121094, 'roll': 0.0}}, {'location': {'x': 105.7729721069336, 'y': 86.97605895996094, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -89.6092529296875, 'roll': 0.0}}, {'location': {'x': 103.31414794921875, 'y': 107.25642395019531, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -72.1598892211914, 'roll': 0.0}}, {'location': {'x': 93.12781524658203, 'y': 125.1519775390625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -47.95458984375, 'roll': 0.0}}, {'location': {'x': 75.60448455810547, 'y': 136.1715850830078, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': -16.373201370239258, 'roll': 0.0}}, {'location': {'x': 55.242088317871094, 'y': 137.66070556640625, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 35.242401123046875, 'y': 137.54884338378906, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.32044845819473267, 'roll': 0.0}}, {'location': {'x': 15.233402252197266, 'y': 137.4297637939453, 'z': 0.0}, 'rotation': {'pitch': 0.0, 'yaw': 0.6268071532249451, 'roll': 0.0}}, {'location': {'x': -4.756378650665283, 'y': 137.18190002441406, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.3521270751953125, 'roll': 0.0}}, {'location': {'x': -24.75600242614746, 'y': 137.05899047851562, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 0.3521270751953125, 'roll': 0.0}}, {'location': {'x': -44.755619049072266, 'y': 136.9360809326172, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': -359.64788818359375, 'roll': 0.0}}, {'location': {'x': -64.84510803222656, 'y': 136.75308227539062, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 3.3399658203125, 'roll': 0.0}}, {'location': {'x': -84.58324432373047, 'y': 130.73001098632812, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 30.599090576171875, 'roll': 0.0}}, {'location': {'x': -99.36563873291016, 'y': 116.35841369628906, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 417.1370849609375, 'roll': 0.0}}, {'location': {'x': -107.94962310791016, 'y': 97.82748413085938, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 433.15338134765625, 'roll': 0.0}}, {'location': {'x': -111.08753204345703, 'y': 77.64744567871094, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 449.1696472167969, 'roll': 0.0}}, {'location': {'x': -110.88705444335938, 'y': 57.60367202758789, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}, {'location': {'x': -110.66287994384766, 'y': 37.60493087768555, 'z': 0.0}, 'rotation': {'pitch': 360.0, 'yaw': 90.6422348022461, 'roll': 0.0}}]
    }
}

DISTANCE_PER_MAP = {
    'Carla/Maps/Town02_Opt': {
        'clockwise': 800,
        'anticlockwise': 1300
    },
    'Carla/Maps/Town10HD': {
        'clockwise': 800,
        'anticlockwise': 1300
    },
    'Carla/Maps/Town06': {
        'clockwise' : 3100,
        'anticlockwise': 1800
    }
    # Add more circuits as needed
}


# Config
DIST_THRESHOLD = 0.5
num_sectors = 4
sector_colors = [
    carla.Color(255, 0, 0),  # Red
    carla.Color(0, 255, 0),  # Green
    carla.Color(0, 0, 255),  # Blue
    carla.Color(255, 255, 0),  # Yellow
]

def is_visited(new_wp, visited, threshold=DIST_THRESHOLD):
    for loc in visited:
        dx = loc.x - new_wp.transform.location.x
        dy = loc.y - new_wp.transform.location.y
        dz = loc.z - new_wp.transform.location.z
        if math.sqrt(dx * dx + dy * dy + dz * dz) < threshold:
            return True
    return False


class ControllerCarla:
    """This class defines the controller of the architecture, responsible of the communication between the logic (model)
    and the user interface (view).

    Attributes:
        data {dict} -- Data to be sent to the view. The key is a frame_if of the view and the value is the data to be
        displayed. Depending on the type of data the frame handles (images, laser, etc)
        pose3D_data -- Pose data to be sent to the view
        recording {bool} -- Flag to determine if a rosbag is being recorded
    """

    def __init__(self):
        """ Constructor of the class. """
        pass
        self.__data_loc = threading.Lock()
        self.__pose_loc = threading.Lock()
        self.data = {}
        self.pose3D_data = None
        self.recording = False
        self.cvbridge = CvBridge()
        self.image_publisher = rospy.Publisher('/carla/ego_vehicle/rgb_view/image', msgImage, queue_size=10)

        client = carla.Client('localhost', 2000)
        client.set_timeout(100.0) # seconds
        self.world = client.get_world()
        time.sleep(5) # takes a few second for the correct map to finish loading
        self.carla_map = self.world.get_map()

        self.wait_for_actors_creation()

        random_orientation = random.random()
        self.clockwise = random_orientation >= 0.5

        self.set_car_init_pose(self.clockwise)
        self.map_waypoints = self.carla_map.generate_waypoints(0.1)
        self.linearized_waypoints = self.map_waypoints  # Keep original list

        self.weather = self.world.get_weather()
        self.pub = rospy.Publisher('/carla/ego_vehicle/steering_angle', Float32, queue_size=1)

        start_location = INITIAL_POSITIONS[self.carla_map.name]['clockwise' if self.clockwise else 'anticlockwise']
        start_wp = self.carla_map.get_waypoint(start_location.location, project_to_road=True, lane_type=carla.LaneType.Driving)

        visited_positions = []
        ordered_waypoints = [start_wp]
        visited_positions.append(start_wp.transform.location)
        current_wp = start_wp

        num_visited=0
        # Traverse along lane
        while True:
            if self.clockwise:
                next_wps = current_wp.next(1.0)
            else:
                next_wps = current_wp.previous(1.0)
            if not next_wps:
                break
            next_wp = next_wps[0]
            if is_visited(next_wp, visited_positions):
                num_visited += 1
                if num_visited > 3:
                    break

            ordered_waypoints.append(next_wp)
            visited_positions.append(next_wp.transform.location)
            current_wp = next_wp


        # Compute cumulative distance
        cum_dist = [0.0]
        for i in range(1, len(ordered_waypoints)):
            loc_prev = ordered_waypoints[i - 1].transform.location
            loc_curr = ordered_waypoints[i].transform.location
            dx = loc_curr.x - loc_prev.x
            dy = loc_curr.y - loc_prev.y
            dz = loc_curr.z - loc_prev.z
            dist = math.sqrt(dx * dx + dy * dy + dz * dz)
            cum_dist.append(cum_dist[-1] + dist)

        total_distance = cum_dist[-1]
        sector_length = total_distance / num_sectors

        # Build per-waypoint data
        self.waypoints_info = []
        for i, wp in enumerate(ordered_waypoints):
            distance = cum_dist[i]
            sector_id = min(int(distance // sector_length), num_sectors - 1)
            color = sector_colors[sector_id]

            self.waypoints_info.append({
                'index': i,
                'transform': wp.transform,
                'sector': sector_id,
                'color': {
                    'r': color.r,
                    'g': color.g,
                    'b': color.b,
                }
            })
            self.world.debug.draw_point(
                wp.transform.location + carla.Location(z=0.5),
                size=0.05,
                color=color,
                life_time=0.0,
                persistent_lines=True
            )

    def lap_completed(self, distance):
        return distance >= DISTANCE_PER_MAP[self.world.get_map().name]['clockwise' if self.clockwise else 'anticlockwise']

    def process_camera_image(self, carla_image):
        # # Convert CARLA image to a ROS Image message and publish it
        # array = np.frombuffer(carla_image.raw_data, dtype=np.uint8)
        # array = array.reshape((carla_image.height, carla_image.width, 4))  # BGRA format
        #
        # # Convert the BGRA CARLA image to BGR, which OpenCV and ROS Image expect
        # bgr_image = array[:, :, :3][:, :, ::-1]
        # # Convert to ROS Image message and publish
        # ros_image = self.cvbridge.cv2_to_imgmsg(bgr_image, encoding="bgr8")
        """
        Function to transform the received carla camera data into a ROS image message
        """
        image_data_array, encoding = self.get_carla_image_data_array(
            carla_image)
        img_msg = self.cvbridge.cv2_to_imgmsg(image_data_array, encoding=encoding)
        # the camera data is in respect to the camera's own frame
        # img_msg.header = self.get_msg_header(timestamp=carla_image.timestamp)

        self.image_publisher.publish(img_msg)

    def get_carla_image_data_array(self, carla_image):
        """
        Function (override) to convert the carla image to a numpy data array
        as input for the cv_bridge.cv2_to_imgmsg() function

        The RGB camera provides a 4-channel int8 color format (bgra).

        :param carla_image: carla image object
        :type carla_image: carla.Image
        :return tuple (numpy data array containing the image information, encoding)
        :rtype tuple(numpy.ndarray, string)
        """

        carla_image_data_array = np.ndarray(
            shape=(carla_image.height, carla_image.width, 4),
            dtype=np.uint8, buffer=carla_image.raw_data)

        return carla_image_data_array, 'bgra8'

    # GUI update
    def update_frame(self, frame_id, data):
        """Update the data to be retrieved by the view.

        This function is called by the logic to update the data obtained by the robot to a specific frame in GUI.

        Arguments:
            frame_id {str} -- Identifier of the frame that will show the data
            data {dict} -- Data to be shown
        """
        try:
            # steer_angle = self.ego_vehicle.get_control().steer # TODO There must be a better way
            # self.pub.publish(steer_angle)
            with self.__data_loc:
                self.data[frame_id] = data
        except Exception as e:
            logger.info(e)

    def get_data(self, frame_id):
        """Function to collect data retrieved by the robot for an specific frame of the GUI

        This function is called by the view to get the last updated data to be shown in the GUI.

        Arguments:
            frame_id {str} -- Identifier of the frame.

        Returns:
            data -- Depending on the caller frame could be image data, laser data, etc.
        """
        try:
            with self.__data_loc:
                data = self.data.get(frame_id, None)
        except Exception:
            pass

        return data

    def update_pose3d(self, data):
        """Update the pose3D data retrieved from the robot

        Arguments:
            data {pose3d} -- 3D position of the robot in the environment
        """
        try:
            with self.__pose_loc:
                self.pose3D_data = data
        except Exception:
            pass

    def get_pose3D(self):
        """Function to collect the pose3D data updated in `update_pose3d` function.

        This method is called from the view to collect the pose data and display it in GUI.

        Returns:
            pose3d -- 3D position of the robot in the environment
        """
        return self.pose3D_data

    # Simulation and dataset
    def reset_carla_simulation(self):
        logger.info("Restarting simulation")

    def pause_carla_simulation(self):
        logger.info("Pausing simulation")
        self.pilot.stop_event.set()

    def unpause_carla_simulation(self):
        logger.info("Resuming simulation")
        self.pilot.stop_event.clear()

    def record_rosbag(self, topics, dataset_name):
        """Start the recording process of the dataset using rosbags

        Arguments:
            topics {list} -- List of topics to be recorde
            dataset_name {str} -- Path of the resulting bag file
        """

        if not self.recording:
            logger.info("Recording bag at: {}".format(dataset_name))
            self.recording = True
            command = "rosbag record -O " + dataset_name + " " + " ".join(topics) + " __name:=behav_bag"
            command = shlex.split(command)
            with open("logs/.roslaunch_stdout.log", "w") as out, open("logs/.roslaunch_stderr.log", "w") as err:
                self.rosbag_proc = subprocess.Popen(command, stdout=out, stderr=err)
        else:
            logger.info("Rosbag already recording")
            self.stop_record()

    def stop_record(self):
        """Stop the rosbag recording process."""
        if self.rosbag_proc and self.recording:
            logger.info("Stopping bag recording")
            self.recording = False
            command = "rosnode kill /behav_bag"
            command = shlex.split(command)
            with open("logs/.roslaunch_stdout.log", "w") as out, open("logs/.roslaunch_stderr.log", "w") as err:
                subprocess.Popen(command, stdout=out, stderr=err)
        else:
            logger.info("No bag recording")

    def reload_brain(self, brain, model=None):
        """Helper function to reload the current brain from the GUI.

        Arguments:
            brain {srt} -- Brain to be reloadaed.
        """
        logger.info("Reloading brain... {}".format(brain))

        self.pause_pilot()
        self.pilot.reload_brain(brain, model)

    # Helper functions (connection with logic)

    def set_pilot(self, pilot):
        self.pilot = pilot

    def stop_pilot(self):
        self.pilot.kill_event.set()

    def pause_pilot(self):
        self.pilot.stop_event.set()

    def resume_pilot(self):
        self.start_time = datetime.now()
        self.pilot.start_time = datetime.now()
        self.pilot.stop_event.clear()

    def initialize_robot(self):
        self.pause_pilot()
        self.pilot.initialize_robot()


    def record_metrics(self, metrics_record_dir_path, world_counter=None, brain_counter=None, repetition_counter=None):
        logger.info("Recording metrics bag at: {}".format(metrics_record_dir_path))

        self.pilot.brain_iterations_real_time = []
        self.time_str = time.strftime("%Y%m%d-%H%M%S")       
        if world_counter is not None:
            current_world_head, current_world_tail = os.path.split(self.pilot.configuration.current_world[world_counter])
        else:
            current_world_head, current_world_tail = os.path.split(self.pilot.configuration.current_world)
        if brain_counter is not None:
            current_brain_head, current_brain_tail = os.path.split(self.pilot.configuration.brain_path[brain_counter])
        else:
            current_brain_head, current_brain_tail = os.path.split(self.pilot.configuration.brain_path)
        self.experiment_metrics = {
            'timestamp': self.time_str,
            'experiment_configuration': self.pilot.configuration.__dict__,
            'world_launch_file': current_world_tail,
            'brain_file': current_brain_tail,
            'robot_type': self.pilot.configuration.robot_type,
            'carla_map': self.carla_map.name,
            'ego_vehicle': self.ego_vehicle.type_id,
            'vehicles_number': len(self.world.get_actors().filter('vehicle.*')),
            'async_mode': self.pilot.configuration.async_mode,
            'weather': {
                'cloudiness': self.weather.cloudiness,
                'precipitation': self.weather.precipitation,
                'precipitation_deposits': self.weather.precipitation_deposits,
                'wind_intensity': self.weather.wind_intensity,
                'sun_azimuth_angle': self.weather.sun_azimuth_angle,
                'sun_altitude_angle': self.weather.sun_altitude_angle,
                'fog_density': self.weather.fog_density,
                'fog_distance': self.weather.fog_distance,
                'fog_falloff': self.weather.fog_falloff,
                'wetness': self.weather.wetness,
                'scattering_intensity': self.weather.scattering_intensity,
                'mie_scattering_scale': self.weather.mie_scattering_scale,
                'rayleigh_scattering_scale': self.weather.rayleigh_scattering_scale,
                },
        }
        if hasattr(self.pilot.configuration, 'experiment_model'):
            if brain_counter is not None:
                self.experiment_metrics['experiment_model'] = self.pilot.configuration.experiment_model[brain_counter]
            else:
                self.experiment_metrics['experiment_model'] = self.pilot.configuration.experiment_model

        if hasattr(self.pilot.configuration, 'experiment_name'):
            self.experiment_metrics['experiment_name'] = self.pilot.configuration.experiment_name

        if hasattr(self.pilot.configuration, 'experiment_name'):
            self.experiment_metrics['experiment_name'] = self.pilot.configuration.experiment_name
            self.experiment_metrics['experiment_description'] = self.pilot.configuration.experiment_description
            self.experiment_metrics['experiment_timeout'] = self.pilot.configuration.experiment_timeouts[world_counter]
            self.experiment_metrics['experiment_repetition'] = repetition_counter
        

        self.metrics_record_dir_path = metrics_record_dir_path + '/' + f"{self.time_str}_{current_brain_tail}_{current_world_tail}"
        os.makedirs(self.metrics_record_dir_path, exist_ok=True)
        self.experiment_metrics_bag_filename = self.metrics_record_dir_path + '/' + self.time_str + '.bag'

        topics = [
            '/carla/npc_vehicle_1/odometry',
            '/carla/ego_vehicle/odometry',
            '/carla/ego_vehicle/collision',
            '/carla/ego_vehicle/lane_invasion',
            '/carla/ego_vehicle/speedometer',
            '/carla/ego_vehicle/steering_angle',
            '/carla/ego_vehicle/vehicle_status',
            '/clock',
            ]

        command = "rosbag record -O " + self.experiment_metrics_bag_filename + " " + " ".join(topics) + " __name:=behav_metrics_bag"
        command = shlex.split(command)
        with open("logs/.roslaunch_stdout.log", "w") as out, open("logs/.roslaunch_stderr.log", "w") as err:
            self.proc = subprocess.Popen(command, stdout=out, stderr=err)

    def stop_recording_metrics(self, termination_code=None, route_length=None):
        logger.info("Stopping metrics bag recording")
        end_time = time.time()

        mean_brain_iterations_real_time = sum(self.pilot.brain_iterations_real_time) / len(self.pilot.brain_iterations_real_time)
        brain_iterations_frequency_real_time = 1 / mean_brain_iterations_real_time

        mean_brain_iterations_simulated_time = sum(self.pilot.brain_iterations_simulated_time) / len(self.pilot.brain_iterations_simulated_time)
        brain_iterations_frequency_simulated_time = 1 / mean_brain_iterations_simulated_time

        target_brain_iterations_real_time = 1 / (self.pilot.time_cycle / 1000)

        if hasattr(self.pilot.brains.active_brain, 'cameras_first_images') and self.pilot.brains.active_brain.cameras_first_images != []:
            first_images =  self.pilot.brains.active_brain.cameras_first_images
            last_images = self.pilot.brains.active_brain.cameras_last_images
        else:
            first_images = []
            last_images = []

        command = "rosnode kill /behav_metrics_bag"
        command = shlex.split(command)
        with open("logs/.roslaunch_stdout.log", "w") as out, open("logs/.roslaunch_stderr.log", "w") as err:
            subprocess.Popen(command, stdout=out, stderr=err)
        logger.info("roslaunch_stdout read")

        # Wait for rosbag file to be closed. Otherwise it causes error
        while os.path.isfile(self.experiment_metrics_bag_filename + '.active'):
            pass
        
        if hasattr(self.pilot.brains.active_brain, 'inference_times'):
            self.pilot.brains.active_brain.inference_times = self.pilot.brains.active_brain.inference_times[10:-10]
            self.experiment_metrics['gpu_mean_inference_time'] = sum(self.pilot.brains.active_brain.inference_times) / len(self.pilot.brains.active_brain.inference_times)
            self.experiment_metrics['gpu_inference_frequency'] = 1 / self.experiment_metrics['gpu_mean_inference_time']
            self.experiment_metrics['gpu_inference'] = self.pilot.brains.active_brain.gpu_inference
        else:
            self.experiment_metrics['gpu_mean_inference_time'] = 0
            self.experiment_metrics['gpu_inference_frequency'] = 0
            self.experiment_metrics['gpu_inference'] = 0

        if hasattr(self.pilot.brains.active_brain, 'bird_eye_view_images'):
            self.experiment_metrics['bird_eye_view_images'] = self.pilot.brains.active_brain.bird_eye_view_images
            self.experiment_metrics['bird_eye_view_unique_images'] = self.pilot.brains.active_brain.bird_eye_view_unique_images
            self.experiment_metrics['bird_eye_view_unique_images_percentage'] = self.experiment_metrics['bird_eye_view_unique_images'] / self.experiment_metrics['bird_eye_view_images']
        else:
            self.experiment_metrics['bird_eye_view_images'] = 0
            self.experiment_metrics['bird_eye_view_unique_images'] = 0
            self.experiment_metrics['bird_eye_view_unique_images_percentage'] = 0


        self.experiment_metrics['brain_iterations_simulated_time'] = len(self.pilot.brain_iterations_simulated_time)
        self.experiment_metrics['mean_brain_iterations_real_time'] = mean_brain_iterations_real_time
        self.experiment_metrics['brain_iterations_frequency_real_time'] = brain_iterations_frequency_real_time
        self.experiment_metrics['target_brain_iterations_real_time'] = target_brain_iterations_real_time
        self.experiment_metrics['mean_brain_iterations_simulated_time'] = mean_brain_iterations_simulated_time
        self.experiment_metrics['brain_iterations_frequency_simulated_time'] = brain_iterations_frequency_simulated_time
        self.experiment_metrics['experiment_total_real_time'] = end_time - self.pilot.pilot_start_time

        experiment_metrics_filename = self.metrics_record_dir_path + '/' + self.time_str

        logger.info("reading bag metrics")
        self.experiment_metrics = metrics_carla.get_metrics(self.experiment_metrics,
                                                            self.experiment_metrics_bag_filename,
                                                            self.map_waypoints,
                                                            experiment_metrics_filename,
                                                            self.pilot.configuration,
                                                            self.waypoints_info,
                                                            self.clockwise)
        self.experiment_metrics['collisions_vehicle'] = 0
        self.experiment_metrics['collisions_walker'] = 0
        self.experiment_metrics['collisions_static'] = 0

        collision_actor_ids = self.experiment_metrics['collision_actor_ids']
        for actor_id in collision_actor_ids:
            actor = self.world.get_actor(actor_id)
            if actor:
                actor_type = actor.type_id.split('.')[0]
                if actor_type == 'vehicle':
                    self.experiment_metrics['collisions_vehicle'] += 1
                elif actor_type == 'walker':
                    self.experiment_metrics['collisions_walker'] += 1
                else:
                    self.experiment_metrics['collisions_static'] += 1
            else:
                print(f"No actor found with ID {actor_id}")


        if hasattr(self.pilot.brains.active_brain, 'red_light_counter'):
            self.experiment_metrics['traffic_light_infractions'] = self.pilot.brains.active_brain.red_light_counter
            self.experiment_metrics['traffic_light_infractions_per_km'] = self.experiment_metrics['traffic_light_infractions'] / (self.experiment_metrics['effective_completed_distance']/1000)

        if route_length is not None:
            self.experiment_metrics['route_completion'] = self.experiment_metrics['effective_completed_distance'] / route_length
        
        wrong_turn_counter = 0
        time_out_counter = 0
        if termination_code is not None:
            if termination_code == 1:
                self.experiment_metrics['termination cause'] = 'success'
            elif termination_code == 2:
                wrong_turn_counter += 1
                self.experiment_metrics['termination cause'] = 'wrong turn'
            elif termination_code == 3:
                time_out_counter += 1
                self.experiment_metrics['termination cause'] = 'time out'
        
        if 'route_completion' in self.experiment_metrics.keys() and 'traffic_light_infractions' in self.experiment_metrics.keys() and termination_code is not None:
            self.experiment_metrics['driving score'] = self.experiment_metrics['route_completion'] * \
                                                    CARLA_INFRACTION_PENALTIES['collision_vehicle']**self.experiment_metrics['collisions_vehicle'] * \
                                                    CARLA_INFRACTION_PENALTIES['collision_static']**self.experiment_metrics['collisions_static'] * \
                                                    CARLA_INFRACTION_PENALTIES['collision_walker']**self.experiment_metrics['collisions_walker'] * \
                                                    CARLA_INFRACTION_PENALTIES['red_light']**self.experiment_metrics['traffic_light_infractions'] * \
                                                    CARLA_INFRACTION_PENALTIES['wrong_turn']**wrong_turn_counter * \
                                                    CARLA_INFRACTION_PENALTIES['time_out']**time_out_counter
        logger.info("saving metrics")
        self.save_metrics(first_images, last_images)
        logger.info("metrics saved")

        for key, value in self.experiment_metrics.items():
            logger.info('* ' + str(key) + ' ---> ' + str(value))

        logger.info("Stopped metrics bag recording")


    def save_metrics(self, first_images, last_images):        
        logger.info(f"saving {self.metrics_record_dir_path}")
        with open(self.metrics_record_dir_path + '/' + self.time_str + '.json', 'w') as f:
            json.dump(self.experiment_metrics, f)
        logger.info("Metrics stored in JSON file")

        for counter, image in enumerate(first_images):
            im = Image.fromarray(image)
            im.save(self.metrics_record_dir_path + '/' + self.time_str + "_first_image_" + str(counter) + ".jpeg")

        for counter, image in enumerate(last_images):
            im = Image.fromarray(image)
            im.save(self.metrics_record_dir_path + '/' + self.time_str + "_last_image_" + str(counter) + ".jpeg")

    def set_car_init_pose(self, right):
        vehicles = self.world.get_actors().filter("vehicle.*")
        if len(vehicles) > 0:
            car = vehicles[0]
        else:
            print("No vehicles found in the world.")

        all_posible_start_points = POINTS_PER_MAP[self.world.get_map().name]['clockwise' if right else 'anticlockwise']
        spawn_dict = random.choice(all_posible_start_points)
        location = carla.Location(
            x=spawn_dict['location']['x'],
            y=spawn_dict['location']['y'],
            z=spawn_dict['location']['z']
        )
        yaw_offset = random.uniform(-4.0, 4.0)
        if not right:
            yaw_offset += 180.0  # Flip direction
        new_rotation = carla.Rotation(
            pitch=spawn_dict['rotation']['pitch'],
            yaw=spawn_dict['rotation']['yaw'] + yaw_offset,
            roll=spawn_dict['rotation']['roll']
        )
        new_transform = carla.Transform(location, new_rotation)

        print(f"===> spawned vehicle in location {new_transform}")
        car.set_transform(new_transform)


    def wait_for_actors_creation(self):
        while len(self.world.get_actors().filter('vehicle.*')) == 0:
            logger.info("Waiting for vehicles!")
            time.sleep(1)
        ego_vehicle_role_name = "ego_vehicle"
        self.ego_vehicle = None
        while self.ego_vehicle is None:
            for vehicle in self.world.get_actors().filter('vehicle.*'):
                if vehicle.attributes.get('role_name') == ego_vehicle_role_name:
                    self.ego_vehicle = vehicle
                    break
            if self.ego_vehicle is None:
                logger.info("Waiting for vehicle with role_name 'ego_vehicle'")
                time.sleep(1)  # sleep for 1 second before checking again
